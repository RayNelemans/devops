version: '3.9'
services:
  # mongodb
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 12345:27017
    expose:
      - 27017
    
  db-exporter:
    image: bitnami/mongodb-exporter:0.11
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    restart: always
    ports: 
      - 9216:9216

  rabbitmq:
    image: rabbitmq:3-management
    ports:
        - 15672:15672
        - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 15s
      retries: 5

  
  api_gateway:
    build: 
      context: ./api_gateway
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${API_GATE_PORT}:3054"
    environment:
      API_GATE_PORT: ${API_GATE_PORT}
      AUTHENTICATION_SERVICE_URL: ${AUTHENTICATION_SERVICE_URL}
      TARGET_SERVICE_URL: ${TARGET_SERVICE_URL}
      SCORE_SERVICE_URL: ${SCORE_SERVICE_URL}
      EXTERNAL_SERVICE_URL: ${EXTERNAL_SERVICE_URL}
    depends_on:
      - mongodb
  
  authentication_service:
    build: 
      context: ./authentication_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:3011"
    environment:
      AUTHENTICATION_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
      AUTHENTICATION_SERVICE_DB_CONNECTION: ${AUTHENTICATION_SERVICE_DB_CONNECTION}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
 
  target_service:
    build: 
      context: ./target_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${TARGET_SERVICE_PORT}:3012"
    environment:
      TARGET_SERVICE_PORT: ${TARGET_SERVICE_PORT}
      TARGET_SERVICE_DB_CONNECTION: ${TARGET_SERVICE_DB_CONNECTION}
      OPAQUE_CODE: ${OPAQUE_CODE}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  score_service:
    build: 
      context: ./score_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${SCORE_SERVICE_PORT}:3013"
    environment:
      SCORE_SERVICE_PORT: ${SCORE_SERVICE_PORT}
      SCORE_SERVICE_DB_CONNECTION: ${SCORE_SERVICE_DB_CONNECTION}
      OPAQUE_CODE: ${OPAQUE_CODE}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  external_service:
    build: 
      context: ./external_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${EXTERNAL_SERVICE_PORT}:3014"
    environment:
      EXTERNAL_SERVICE_PORT: ${EXTERNAL_SERVICE_PORT}
      EXTERNAL_SERVICE_DB_CONNECTION: ${EXTERNAL_SERVICE_DB_CONNECTION}
      OPAQUE_CODE: ${OPAQUE_CODE}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy