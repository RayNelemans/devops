version: '3.9'
services:
  # mongodb
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 12345:27017
    expose:
      - 27017
    
  db-exporter:
    image: bitnami/mongodb-exporter:0.11
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    restart: always
    ports: 
      - 9216:9216

  ##Prometheus
  #prometheus:
  #  image: prom/prometheus:latest
  #  ports:
  #    - 9090:9090
  #  volumes:
  #    - ./prometheus:/etc/prometheus
  #    - prometheus-data:/prometheus
  #  depends_on:
  #    - mongodb
  #    - rabbitmq
  #    - api-gateway
  #    - authenticationservice
  #    - externalservice
  #    - scoreservice
  #    - targetservice
  #  command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  ##Grafana
  #grafana:
  #  image: grafana/grafana:latest
  #  container_name: grafana
  #  ports:
  #    - 3000:3000
  #  volumes:
  #    - ./grafana:/var/lib/grafana
  #  depends_on:
  #    - prometheus

  #rabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
        - 15672:15672
        - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 15s
      retries: 5

  
  api_gateway:
    build: 
      context: ./api_gateway
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${API_GATE_PORT}:3010"
    environment:
      API_GATE_PORT: ${API_GATE_PORT}
      AUTHENTICATION_SERVICE_URL: ${AUTHENTICATION_SERVICE_URL}
      TARGET_SERVICE_URL: ${TARGET_SERVICE_URL}
      SCORE_SERVICE_URL: ${SCORE_SERVICE_URL}
      EXTERNAL_SERVICE_URL: ${EXTERNAL_SERVICE_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongodb
  

  authenticationservice:
    build: 
      context: ./authentication_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:3012"
    environment:
      AUTHENTICATION_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
      AUTHENTICATIONSERVICE_DB_CONNECTION: ${AUTHENTICATION_SERVICE_DB_CONNECTION}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
 
  externalservice:
    build: 
      context: ./external_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${EXTERNAL_SERVICE_PORT}:3014"
    environment:
      EXTERNAL_SERVICE_PORT: ${EXTERNAL_SERVICE_PORT}
      EXTERNESERVICE_DB_CONNECTION: ${EXTERNAL_SERVICE_DB_CONNECTION}
      OPAQUE_CODE: ${OPAQUE_CODE}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  scoreservice:
    build: 
      context: ./score_service
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${SCORE_SERVICE_PORT}:3038"
    environment:
      SCORE_SERVICE_PORT: ${SCORE_SERVICE_PORT}
      SCORESERVICE_DB_CONNECTION: ${SCORESERVICE_DB_CONNECTION}
      OPAQUE_TOKEN: ${OPAQUE_TOKEN}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  targetservice:
    build: 
      context: ./TargetService
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${TARGET_SERVICE_PORT}:3012"
    environment:
      TARGET_SERVICE_PORT: ${TARGET_SERVICE_PORT}
      TARGETSERVICE_DB_CONNECTION: ${TARGETSERVICE_DB_CONNECTION}
      OPAQUE_TOKEN: ${OPAQUE_TOKEN}
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

volumes:
  prometheus-data: